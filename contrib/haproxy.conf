global
    daemon
    maxconn  1000
    user  haproxy
    group haproxy
    tune.ssl.default-dh-param       2048
    server-state-file /tmp/haproxy_server_state
    # Modern browser compatibility only as mentioned here:
    # https://wiki.mozilla.org/Security/Server_Side_TLS
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    tune.ssl.default-dh-param 2048

    # Time-to-first-Byte (TTFB) value needs to be optimized based on
    # the actual public certificate chain see
    # https://www.igvita.com/2013/10/24
    # /optimizing-tls-record-size-and-buffering-latency/
    tune.ssl.maxrecord 1370

defaults
    balance  roundrobin
    log  global
    mode  http
    option  allbackups
    option  forceclose
    option  httpchk GET /
    timeout  connect 15s
    timeout  client 30s
    timeout  server 300s
    timeout  queue 10s

frontend tsdb
    bind 5.9.143.166:4242
    acl path_get path -m beg /api/query
    acl path_put path -m beg /api/put
    acl path_put path -m beg /api/metadata/put
    acl path_put path -m beg /api/count
    #default_backend bosun
    default_backend tsdb_read
    option httplog
    stats enable
    stats uri /haproxy
    use_backend tsdb_read if path_get
    use_backend tsdb_write if path_put

frontend HTTPS_REVERSE-merged
	bind			5.9.143.166:4443 name 5.9.143.166:4443 ssl no-sslv3 force-tlsv10 force-tlsv11 force-tlsv12 crt /usr/local/etc/haproxy/https.pem crt /usr/local/etc/haproxy/https
	mode			http
	log			    global
	option			http-keep-alive
	option			forwardfor
	acl https ssl_fc
	http-request set-header		X-Forwarded-Proto http if !https
	http-request set-header		X-Forwarded-Proto https if https
	timeout client		30000
	# Remove headers that expose security-sensitive information.
	rspidel ^Server:.*$
	rspidel ^X-Powered-By:.*$
	rspidel ^X-AspNet-Version:.*$

	# add some security related headers
	#rspadd Content-Security-Policy:\ default-src\ https:\ data:\ \'unsafe-inline\\'\ \\'unsafe-eval\'
	#rspadd Content-Security-Policy:\ default-src\ \\'self\\'\ frame-ancestors\ \\'self\\'
	rspadd X-Frame-Options:\ SAMEORIGIN
	rspadd X-Content-Type-Options:\ NOSNIFF
	rspadd X-Xss-Protection:\ 1;\ mode=block
	acl			aclcrt_HTTPS_REVERSE	hdr_reg(host) -i ^bosun\.langerma\.org(:([0-9]){1,5})?$
	acl			aclcrt_HTTPS_REVERSE	hdr_reg(host) -i ^www\.langerma\.org(:([0-9]){1,5})?$
	acl			aclcrt_HTTPS_REVERSE	hdr_reg(host) -i ^langerma\.org(:([0-9]){1,5})?$
	acl			name-fw	hdr(host) -i fw.langerma.org
	acl			name-bosun	hdr(host) -i bosun.langerma.org
	acl			name-www	hdr(host) -i www.langerma.org
	use_backend bosun if name-bosun
	use_backend web if name-www
    default_backend web

#frontend http
#    bind                    10.0.0.254:80 name 10.0.0.254:80
#    bind                    2001:470:26:b1f:dead:f00d::254:80 name 2001:470:26:b1f:dead:f00d::254:80
#    bind                    93.111.144.62:80 name 93.111.144.62:80
#    mode                    http
#    log                     global
#    option                  http-keep-alive
#    timeout client          30000
#    default_backend ssl-redirect

#backend ssl-redirect
#    mode                    http
#    log                     global
#    rspadd Strict-Transport-Security:\ max-age=31536000;
#    rspirep ^(Set-Cookie:((?!;\ secure).)*)$ \1;\ secure if { ssl_fc }
#    timeout connect         30000
#    timeout server          30000
#    retries                 3
#    redirect scheme https code 301

backend web
    server localhost 127.0.0.1:80 check

backend bosun
    server bosun 127.0.0.1:8070 check

backend tsdb_read
    option tcp-check
    server localhost 127.0.0.1:4242 check

backend tsdb_write
    option tcp-check
    # A bunch of ACLs to make sure we don't get writes accidently from dev machines, vpn, etc
    #acl allowed src ....
    #acl blocked src ....
    #http-request deny if blocked
    #http-request deny unless allowed
    server localhost 127.0.0.1:14242 check
